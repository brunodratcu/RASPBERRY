# boot.py - Script de inicializa√ß√£o autom√°tica
"""
Script executado automaticamente na inicializa√ß√£o do Pico
Vers√£o 3.0 - MQTT Only + Registration System
"""
import machine
import utime
import gc

# LED interno para indica√ß√£o visual
led = machine.Pin("LED", machine.Pin.OUT)

def boot_sequence():
    """Sequ√™ncia de boot com indica√ß√µes visuais"""
    print("\n" + "="*50)
    print("MAGIC MIRROR - BOOT SEQUENCE v3.0")
    print("Sistema MQTT Only + Registration")
    print("="*50)
    
    # Pisca LED para indicar est√°gios do boot
    stages = [
        "Inicializando hardware...",
        "Verificando configura√ß√£o...", 
        "Preparando sistema MQTT...",
        "Carregando aplica√ß√£o principal..."
    ]
    
    for i, stage in enumerate(stages):
        print(f"[{i+1}/4] {stage}")
        led.on()
        utime.sleep_ms(300)
        led.off()
        utime.sleep_ms(200)
    
    # Coleta de lixo inicial
    gc.collect()
    print(f"Mem√≥ria livre ap√≥s boot: {gc.mem_free()} bytes")
    
    # LED fica ligado indicando boot completo
    led.on()
    print("‚úÖ Boot completo - iniciando main.py")
    print("="*50)

def check_config():
    """Verifica√ß√£o b√°sica de configura√ß√£o"""
    try:
        from config import REGISTRATION_ID, WIFI_SSID, MQTT_BROKER
        
        if REGISTRATION_ID == "REG_CHANGEME_12345":
            print("‚ö†Ô∏è  ATEN√á√ÉO: REGISTRATION_ID n√£o configurado!")
            print("   Configure um ID v√°lido no config.py")
            return False
        
        if WIFI_SSID == "SUA_REDE_WIFI":
            print("‚ö†Ô∏è  ATEN√á√ÉO: WiFi n√£o configurado!")
            print("   Configure WIFI_SSID e WIFI_PASSWORD no config.py")
            return False
        
        print(f"üìã Registration ID: {REGISTRATION_ID[:20]}...")
        print(f"üì∂ WiFi SSID: {WIFI_SSID}")
        print(f"üì° MQTT Broker: {MQTT_BROKER}")
        return True
        
    except ImportError as e:
        print(f"‚ùå Erro ao importar configura√ß√£o: {e}")
        return False

# Executa sequ√™ncia de boot
boot_sequence()

# Verifica configura√ß√£o b√°sica
if check_config():
    print("üöÄ Configura√ß√£o OK - prosseguindo com main.py")
else:
    print("‚ö†Ô∏è  Problemas na configura√ß√£o detectados")
    print("   O sistema pode n√£o funcionar corretamente")
    print("   Verifique o arquivo config.py")

print("="*50)
